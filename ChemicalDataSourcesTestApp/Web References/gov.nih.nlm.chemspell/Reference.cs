//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ChemicalDataSourcesTestApp.gov.nih.nlm.chemspell {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SpellAidSoapBinding", Namespace="http://chemspell.nlm.nih.gov/axis/SpellAid.jws/axis/SpellAid.jws")]
    public partial class SpellAidService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getSugListOperationCompleted;
        
        private System.Threading.SendOrPostCallback mainOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SpellAidService() {
            this.Url = global::ChemicalDataSourcesTestApp.Properties.Settings.Default.ChemicalDataSourcesTestApp_gov_nih_nlm_chemspell_SpellAidService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getSugListCompletedEventHandler getSugListCompleted;
        
        /// <remarks/>
        public event mainCompletedEventHandler mainCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://chemspell.nlm.nih.gov/axis/SpellAid.jws/axis/SpellAid.jws", ResponseNamespace="http://chemspell.nlm.nih.gov/axis/SpellAid.jws/axis/SpellAid.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getSugList(string name, string src) {
            object[] results = this.Invoke("getSugList", new object[] {
                        name,
                        src});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSugListAsync(string name, string src) {
            this.getSugListAsync(name, src, null);
        }
        
        /// <remarks/>
        public void getSugListAsync(string name, string src, object userState) {
            if ((this.getSugListOperationCompleted == null)) {
                this.getSugListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSugListOperationCompleted);
            }
            this.InvokeAsync("getSugList", new object[] {
                        name,
                        src}, this.getSugListOperationCompleted, userState);
        }
        
        private void OngetSugListOperationCompleted(object arg) {
            if ((this.getSugListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSugListCompleted(this, new getSugListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://chemspell.nlm.nih.gov/axis/SpellAid.jws/axis/SpellAid.jws", ResponseNamespace="http://chemspell.nlm.nih.gov/axis/SpellAid.jws/axis/SpellAid.jws")]
        public void main(string[] args) {
            this.Invoke("main", new object[] {
                        args});
        }
        
        /// <remarks/>
        public void mainAsync(string[] args) {
            this.mainAsync(args, null);
        }
        
        /// <remarks/>
        public void mainAsync(string[] args, object userState) {
            if ((this.mainOperationCompleted == null)) {
                this.mainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmainOperationCompleted);
            }
            this.InvokeAsync("main", new object[] {
                        args}, this.mainOperationCompleted, userState);
        }
        
        private void OnmainOperationCompleted(object arg) {
            if ((this.mainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mainCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getSugListCompletedEventHandler(object sender, getSugListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSugListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSugListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void mainCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591